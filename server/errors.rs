//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "errors")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub status_code: i16,
    pub user_affected: String,
    pub path: String,
    pub line: i32,
    pub message: String,
    pub namespace_id: Uuid,
    pub stack_trace: String,
    pub resolved: bool,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::namespaces::Entity",
        from = "Column::NamespaceId",
        to = "super::namespaces::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Namespaces,
}

impl Related<super::namespaces::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Namespaces.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
